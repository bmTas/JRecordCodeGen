package example.ioBuilder.dtar020.example;
 /*
  *   Example program for DTAR020.cbl
  *   This class uses the JRecord project (https://sourceforge.net/projects/jrecord/)
  * -------------------------------------------------------------------
  *        
  * *------------- Keep this notice in your final code ---------------
  * *   This code was generated by JRecord projects CodeGen program
  * *            on the: 6 Nov 2018 12:47:9 
  * *     from Copybook: DTAR020.cbl
  * *          Template: javaPojo
  * *             Split: None   
  * * File Organization: FixedWidth   
  * *              Font: cp037
  * *   
  * *    CodeGen Author: Bruce Martin
  * *-----------------------------------------------------------------
  *
  *   This class should be used as an example of reading/writing files
  *   using JRecord. You will need to modify the code to meet your
  *   needs. The Author of CodeGen (Bruce Martin) program takes no 
  *   responsibility for the accuracy of the generated code. 
  *
  *   Good Luck
  *              Bruce Martin
  *
  * ------------------------------------------------------------------
  * v01  CodeGen        6 Nov 2018  Initial version
  *     (Bruce Martin)
  *
  * ------------------------------------------------------------------ 
  */


import java.io.IOException;

import net.sf.JRecord.cgen.def.IWriter;

import example.ioBuilder.dtar020.def.IDtar020;
import example.ioBuilder.dtar020.def.IDtar020Pojo;
import example.ioBuilder.dtar020.io.IOBuilderDtar020;


/**
 * Write Cobol file using a Cobol Copybook (Dtar020).
 *
 * This Generated program is intended as an example of using JRecord
 * rather than a useful program (that compiles - it wont).
 * You should regard it as a starting point and modify 
 * it according to needs
 */
public final class WriteDtar020 {

    private String testDir        = "G:/temp/";
    private String salesFileOut   = testDir + "DTAR020out.bin";
    private String copybookName   = "DTAR020.cbl";                                       
    
    /**
     * Example of LineReader  classes
     */
    public WriteDtar020() {
     }
    
     public void byteArrayWriter() {

        try {                                         
            IOBuilderDtar020 ioBldr = new IOBuilderDtar020(copybookName);
            IWriter<IDtar020> writer = ioBldr.newWriter(salesFileOut);  
  
            writer.write(createDtar020(ioBldr.newDtar020JrLine(), data));                   

            writer.close();
        } catch (Exception e) {
             System.out.println();

            e.printStackTrace();
        }
    }
    
    public void pojoWriter() {

        try {                                         
            IOBuilderDtar020 ioBldr = new IOBuilderDtar020(copybookName);
            IWriter<IDtar020> writer = ioBldr.newWriter(salesFileOut + "2");  
  
            writer.write(createDtar020(ioBldr.newDtar020PojoLine(), data));                   

            writer.close();
        } catch (Exception e) {
             System.out.println();

            e.printStackTrace();
        }
    }

 
  /*
   *   The following code contains sample assignments for every 
   * field in the Cobol File. You should modify the code to suit
   * your needs.
   *   As I do not know where the data is coming from, I have used
   * SourceOfDataForTheCobolFile instead. You should replace this with your
   * class / classes  or remove it as needed.
   *   To put it another way, it time for you to start Coding
   */
   //TODO Update as required
    private IDtar020Pojo createDtar020(IDtar020Pojo l, SourceOfDataForTheCobolFile data) 
    throws IOException {
         
        l.setKeycodeNo(data. ...);
        l.setStoreNo(data. ...);
        l.setDate(data. ...);
        l.setDeptNo(data. ...);
        l.setQtySold(data. ...);
        l.setSalePrice(data. ...);
	
    
        return l;
    }


    public static void main(String[] args) {
        WriteDtar020 w = new WriteDtar020();
        
        w.byteArrayWriter();
        w.pojoWriter();
    }
}


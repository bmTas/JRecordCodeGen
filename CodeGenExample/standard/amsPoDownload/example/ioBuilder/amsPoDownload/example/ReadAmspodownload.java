package example.ioBuilder.amsPoDownload.example;
 /*
  *   Example program for amsPoDownload.cbl
  *   This class uses the JRecord project (https://sourceforge.net/projects/jrecord/)
  * -------------------------------------------------------------------
  *        
  * *------------- Keep this notice in your final code ---------------
  * *   This code was generated by JRecord projects CodeGen program
  * *            on the: 6 Nov 2018 9:13:27 
  * *     from Copybook: amsPoDownload.cbl
  * *          Template: standard
  * *             Split: 01   
  * * File Organization: Text   
  * *              Font: 
  * *   
  * *    CodeGen Author: Bruce Martin
  * *-----------------------------------------------------------------
  *
  *   This class should be used as an example of reading/writing files
  *   using JRecord. You will need to modify the code to meet your
  *   needs. The Author of CodeGen (Bruce Martin) program takes no 
  *   responsibility for the accuracy of the generated code. 
  *
  *   Good Luck
  *              Bruce Martin
  *
  * ------------------------------------------------------------------
  * v01  CodeGen        6 Nov 2018  Initial version
  *     (Bruce Martin)
  *
  * ------------------------------------------------------------------ 
  */


import net.sf.JRecord.JRecordInterface1;
import net.sf.JRecord.Details.AbstractLine;
import net.sf.JRecord.IO.AbstractLineReader;
import net.sf.JRecord.Common.Constants;
import net.sf.JRecord.External.CopybookLoader;
import net.sf.JRecord.def.IO.builders.ICobolIOBuilder;

import example.ioBuilder.amsPoDownload.schema.FieldNamesAmspodownload;


/**
 * Read Cobol file using a Cobol Copybook (Amspodownload).
 *
 * This Generated program is intended as an example of using JRecord
 * rather than a useful program (that compiles - it wont).
 * You should regard it as a starting point and modify
 * it according to needs
 */
public final class ReadAmspodownload {

    private String dataFile     = "";
    private String copybookName = "amsPoDownload.cbl";

    /**
     * Example of LineReader  classes
     */
    public ReadAmspodownload() {
        super();

        AbstractLine line;
        int lineNum = 0;

        try {
            ICobolIOBuilder iob = JRecordInterface1.COBOL
                                .newIOBuilder(copybookName)
                                   //.setFont("") // Think about specifying an encoding !!!
                                   .setFileOrganization(Constants.IO_BIN_TEXT)
                                   .setSplitCopybook(CopybookLoader.SPLIT_01_LEVEL)
         //TODO   --    Setup/Check record Selection !!!
         //TODO     .setRecordSelection( "PO-Record", ExternalFieldSelection.newFieldSelection("field-name", "value to test"))  
         //TODO     .setRecordSelection( "Product-Record", ExternalFieldSelection.newFieldSelection("field-name", "value to test"))  
         //TODO     .setRecordSelection( "Location-Record", ExternalFieldSelection.newFieldSelection("field-name", "value to test"))  
                                       ;  

          IOBuilderBarDTAR020 iob = new IOBuilderBarDTAR020();

          IReader<LineRecBarDTAR020Pojo> reader = iob.newReader(new FileInputStream(filename));
          LineRecBarDTAR020Pojo line;

            FieldNamesAmspodownload.RecordPoRecord rPoRecord = FieldNamesAmspodownload.RECORD_PO_RECORD;
            FieldNamesAmspodownload.RecordProductRecord rProductRecord = FieldNamesAmspodownload.RECORD_PRODUCT_RECORD;
            FieldNamesAmspodownload.RecordLocationRecord rLocationRecord = FieldNamesAmspodownload.RECORD_LOCATION_RECORD;
            AbstractLineReader reader = iob.newReader(dataFile);
            while ((line = reader.read()) != null) {
                lineNum += 1;
                if (/* PO-Record  */) {
                   System.out.println(
                              line.getFieldValue(rPoRecord.recordType).asString()
                      + " " + line.getFieldValue(rPoRecord.sequenceNumber).asString()
                      + " " + line.getFieldValue(rPoRecord.vendor).asString()
                      + " " + line.getFieldValue(rPoRecord.po).asString()
                      + " " + line.getFieldValue(rPoRecord.entryDate).asString()
                      + " " + line.getFieldValue(rPoRecord.beg01Code).asString()
                      + " " + line.getFieldValue(rPoRecord.beg02Code).asString()
                      + " " + line.getFieldValue(rPoRecord.department).asString()
                      + " " + line.getFieldValue(rPoRecord.expectedRecieptDate).asString()
                      + " " + line.getFieldValue(rPoRecord.cancelByDate).asString()
                      + " " + line.getFieldValue(rPoRecord.ediType).asString()
                   );
                }
                if (/* Product-Record  */) {
                   System.out.println(
                              line.getFieldValue(rProductRecord.recordType).asString()
                      + " " + line.getFieldValue(rProductRecord.packQty).asString()
                      + " " + line.getFieldValue(rProductRecord.packCost).asString()
                      + " " + line.getFieldValue(rProductRecord.apn).asString()
                      + " " + line.getFieldValue(rProductRecord.product).asString()
                      + " " + line.getFieldValue(rProductRecord.pmgDtlTechKey).asString()
                      + " " + line.getFieldValue(rProductRecord.casePackId).asString()
                      + " " + line.getFieldValue(rProductRecord.productName).asString()
                   );
                }
                if (/* Location-Record  */) {
                   System.out.println(
                              line.getFieldValue(rLocationRecord.recordType).asString()
                      + " " + line.getFieldValue(rLocationRecord.dcNumber.get(0)).asString()
                      + " " + line.getFieldValue(rLocationRecord.packQuantity.get(0)).asString()
                   );
                }
            }

            reader.close();
        } catch (Exception e) {
            System.out.println("~~> " + lineNum + " " + e);
            System.out.println();

            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        new ReadAmspodownload();
    }
}

